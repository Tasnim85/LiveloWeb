{% extends 'home/homeClient.html.twig' %}

{% block title %}My Deliveries{% endblock %}

{% block body %}
<div class="container py-5">
    <div class="row justify-content-center mb-5">
        <h1 class="text-center text-primary fw-bold">My Deliveries</h1>
    </div>

    <!-- Card for Deliveries -->
    <div class="card shadow-lg border-0">
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th scope="col" class="text-dark">ID Livraison</th>
                            <th scope="col" class="text-dark">Created At</th>
                            <th scope="col" class="text-dark">State / Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    {% for livraison in livraisons %}
                        <tr>
                            <td>{{ livraison.idLivraison }}</td>
                            <td>{{ livraison.createdAt ? livraison.createdAt|date('Y-m-d') : '' }}</td>
                            <td>
                                {% if livraison.commandeId.statut == 'Shipping' %}
                                    <span class="badge bg-warning text-white">Shipping</span>
                                {% elseif livraison.commandeId.statut == 'Processing' %}
                                    <span class="badge bg-warning text-dark">Processing</span>
                                {% elseif livraison.commandeId.statut == 'Delivered' %}
                                    {# <div class="d-flex gap-2">
                                        <a href="{{ path('app_livraison_show', {'idLivraison': livraison.idLivraison}) }}" 
                                           class="btn btn-info btn-sm shadow-sm rounded-pill">
                                            Rate
                                        </a>
                                    </div> #}

                                    <button type="button" class="btn btn-sm btn-primary" data-toggle="modal" data-target="#exampleModal">
                                        Rate
                                    </button>

                                    <!-- Modal -->
                                    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="exampleModalLabel">Rate this delivery:</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">

                                                <form id="formAvis" action="{{ path('app_avis_new') }}" method="POST">
                                                    <div class="mb-3">
                                                        <label for="description" class="form-label fw-semibold">Description :</label>
                                                        <input type="text" class="form-control" id="description" name="description" 
                                                               placeholder="Entrez votre description" minlength="3" required>
                                                    </div>

                                                    <div class="form-group mb-3">
                                                        <p class="text-danger" id="error" style="display: none;"></p>
                                                    </div>

                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                        <button type="submit" class="btn btn-primary">Confirm</button>
                                                    </div>
                                                </form>

                                            </div>
                                            
                                        </div>
                                    </div>
                                    </div>

                                {% else %}
                                    <span class="badge bg-secondary">{{ livraison.commandeId.statut }}</span>
                                {% endif %}
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="3" class="text-center text-muted">No deliveries found</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- New Delivery Button -->
    
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('formAvis');
            const input = document.getElementById('description');
            const error = document.getElementById('error');

            form.addEventListener('submit', function (e) {
                e.preventDefault(); // Empêche l'envoi traditionnel du formulaire
                
                const description = input.value.trim();
                
                // Réinitialiser les états
                error.style.display = 'none';
                input.classList.remove('is-invalid');
                
                // Validation
                if (description === '') {
                    error.textContent = '⚠️ The description is required.';
                    error.style.display = 'block';
                    input.classList.add('is-invalid');
                    return;
                }
                
                if (description.length < 3) {
                    error.textContent = '⚠️ The description must be at least 3 characters long.';
                    error.style.display = 'block';
                    input.classList.add('is-invalid');
                    return;
                }

                // Si la validation est OK, envoyer les données via AJAX
                fetch(form.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        'description': description
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(data => Promise.reject(data));
                    }
                    return response.text();
                })
                .then(() => {
                    // Redirection en cas de succès
                    window.location.href = '{{ path('app_avis_index') }}';
                })
                .catch(data => {
                    // Afficher l'erreur du serveur
                    error.textContent = '⚠️ ' + (data.error || 'Une erreur est survenue.');
                    error.style.display = 'block';
                    input.classList.add('is-invalid');
                });
            });

            // Retirer les messages d'erreur quand l'utilisateur commence à taper
            input.addEventListener('input', function() {
                if (input.value.trim() !== '') {
                    error.style.display = 'none';
                    input.classList.remove('is-invalid');
                }
            });
        });
    </script>
{% endblock %}
